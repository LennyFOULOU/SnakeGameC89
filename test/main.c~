#include<stdio.h>
#include<stdlib.h>
#include<graph.h>
#include"fond.h"
#include"serpent.h"
#include"fruit.h"

#define LARGEUR_FENETRE 1600 /* Largeur de la fenêtre (60 colonnes de jeu + murs de 2 cases de chaque côté) */
#define HAUTEUR_FENETRE 1000 /* Hauteur de la fenêtre (40 lignes de jeu + murs de 2 cases en haut et en bas) */
#define TAILLE_CASE 10       /* Taille d'une case pour le jeu de Snake */
#define NB_COLONNES 60       /* Nombre de colonnes du jeu */
#define NB_LIGNES 40         /* Nombre de lignes du jeu */
#define DELAI 100000 /*Microseconde*/
int main() {


   couleur c;
    int touchePressee;
        Serpent serpent;

    
    InitialiserGraphique();
    CreerFenetre(10, 10, LARGEUR_FENETRE, HAUTEUR_FENETRE);
      c=CouleurParNom("lightgreen"); 

    
    dessinerMurs();


    


    initialiserSerpent(&serpent);
    InitialiserSprites();

    touchePressee = 0;
    while (!touchePressee) {
        if (ToucheEnAttente()) {
            KeySym touche = Touche();

            /* Utiliser des conditions pour détecter différentes touches */
            if (touche == XK_Return) {
                /* Code pour la touche "entrée" */
            } else if (touche == XK_Escape) {
                /* Code pour la touche "échappe" */
                touchePressee = 1;
            } else if (touche == XK_Shift_L || touche == XK_Shift_R) {
                /* Code pour les touches "Shift" */
            } else if (touche == XK_Control_L || touche == XK_Control_R) {
                /* Code pour les touches "Control" */
            } else if (touche == XK_KP_Enter) {
                /* Code pour la touche "entrée" du pavé numérique */
            } else if (touche == XK_space) {
                /* Code pour la touche "espace" */
            } else if (touche == XK_Left || touche == XK_Right || touche == XK_Up || touche == XK_Down) {
                serpent.direction = touche;
            }

        } else {
            /* Si aucune touche n'est en attente, continuer à déplacer le serpent dans la dernière direction */
            deplacerSerpent(&serpent);
            EffacerEcran(couleurFond);
            afficherSerpent(&serpent);
	    AfficherPommeAleatoire();
	    LibererSprites();
            usleep(DELAI); /* Ajout du délai */
        }
    }



  

    FermerGraphique();
    LibererSprites();
    free(serpent.trainee);

    
    return EXIT_SUCCESS;
}

